__________________ 2007 #1 _______________________

public static boolean isSelfDivisor(int number)
{
	int digit = number % 10;
	int rest = number / 10;
	
	while(!(rest == 0 && digit == 0))
	{
		if(digit == 0 || number % digit != 0)
		{
			return false;
		}
		digit = rest % 10;
		rest = rest / 10;
	}
	return true;
}

public static int[] firstNumSelfDivisors(int start, int num)
{
	int[] result = int[num];
	int i = 0;
	while(i < num)
	{
		if(isSelfDivisor(start))
		{
			result[i] = start;
			i = i + 1;
		}
		start = start + 1;
	}
	return result;
}

Score: 9

__________________ 2010 #4 _______________________

public Actor actorWithMostNeighbore()
{
	Actor result = null;
	int numNeighbors = -1;	
	
	for(Location l : gr.getOccupiedLocations())
	{
		int neighborCount = gr.getOccupiedAdjacentLocations(l).size();
		if(neighborCount > numNeighbors)
		{
			numNeighbors = neighborCount;
			result = gr.get(l);
		}
	}
	return result;
}

public List<Location> getOccupiedWithinTwo(Location loc)
{
	ArrayList<Location> result = new ArrayList<Location>();
	for(int r = loc.getRow() - 2; r <= loc.getRow() + 2; r = r + 1)
	{
		for(int c = loc.getCol() - 2; c <= loc.getCol() + 2; c = c + 1)
		{
			l = new Location(r, c);
			if((r != loc.getRow() || c != loc.getCol()) &&
			   gr.isValid(l) &&
			   gr.get(l) != null)
			{
				result.add(l);
			}
		}
	}
	return result;
}

Score: 9
